/* styles.css - Refatorado */

/* Variáveis Globais CSS (Custom Properties) */
:root {
    --font-family-default: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

    /* Cores Primárias */
    --color-primary-text: #2d3748;
    --color-secondary-text: #4a5568;
    --color-muted-text: #718096;
    --color-accent: #667eea;
    --color-accent-hover: #5a67d8;

    /* Cores de Feedback */
    --color-success: #48bb78;
    --color-success-hover: #38a169;
    --color-danger: #fc8181;
    --color-danger-hover: #f56565;
    --color-info-border: #4299e1;

    /* Cores de Fundo */
    --bg-gradient-start: #d5d7e0;
    --bg-gradient-end: #c2b5cf;
    --bg-container: rgba(255, 255, 255, 0.95);
    --bg-container-alt: rgba(255, 255, 255, 0.8);
    --bg-input: rgba(255, 255, 255, 0.9);
    --bg-notification: #ebf8ff;
    --bg-task-item: rgba(247, 250, 252, 0.9);
    --bg-task-item-current: rgba(235, 248, 255, 0.9);
    --bg-white: #fff;
    --bg-light-gray: #f7fafc; /* Cor da linha órfã corrigida */


    /* Bordas e Sombras */
    --border-color-light: #e2e8f0;
    --box-shadow-container: 0 8px 32px rgba(0, 0, 0, 0.1);
    --box-shadow-dropdown: 0 2px 10px rgba(0, 0, 0, 0.1);
    --text-shadow-timer: 10px 10px 4px rgba(0, 0, 0, 0.1);

    /* Outros */
    --default-border-radius: 5px;
    --container-border-radius: 15px;
    --default-padding: 0.5rem;
    --container-padding: 2rem;

    /* Imagem de fundo padrão (pode ser sobrescrita por JS) */
    --background-image-default: url('https://cdn-icons-png.flaticon.com/512/3208/3208756.png');
}

/* Reset Global e Estilos Base */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: var(--font-family-default);
}

body {
    background: linear-gradient(135deg, var(--bg-gradient-start) 0%, var(--bg-gradient-end) 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px; /* Poderia ser var(--container-padding) ou similar se preferir */
}

/* Container Principal */
.container {
    background: var(--bg-container);
    padding: var(--container-padding);
    border-radius: var(--container-border-radius);
    box-shadow: var(--box-shadow-container);
    width: 100%;
    max-width: 600px;
    position: relative;
    overflow: hidden;
}

.container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: var(--background-image, var(--background-image-default));
    background-size: 200px;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0.1;
    z-index: 0;
    transition: background-image 0.3s ease;
}

/* Cabeçalhos */
h1 {
    color: var(--color-primary-text);
    text-align: center;
    margin-bottom: 2rem;
    position: relative;
    z-index: 1;
}

h2 {
    color: var(--color-primary-text);
    margin-bottom: 1rem;
    /* Adicionado para consistência, já que h1 também é relativo */
    position: relative;
    z-index: 1;
}

/* Componente Timer */
.timer-container {
    text-align: center;
    margin-bottom: 2rem;
    position: relative;
    font-size: 25px; /* Mantida a alteração do usuário */
    z-index: 1;
}

.timer-display {
    font-size: 25px; /* Mantida a alteração do usuário */
    font-weight: bold;
    color: var(--color-secondary-text);
    margin-bottom: 8rem; /* Mantida a alteração do usuário */
    text-shadow: var(--text-shadow-timer); /* Mantida a alteração do usuário */
    position: relative;
    z-index: 1;
}

.timer-controls {
    display: flex;
    gap: var(--default-padding);
    justify-content: center;
    margin-bottom: 1rem;
    flex-wrap: wrap;
}

/* Componente Seletor de Background */
.background-selector {
    margin-top: 1rem;
    padding: 1rem;
    background: var(--bg-container-alt);
    border-radius: 8px; /* Poderia ser var(--default-border-radius) ou um novo var */
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--default-padding);
    position: relative; /* Garante que fique acima do ::before do .container */
    z-index: 1;
}

.background-selector label {
    color: var(--color-primary-text);
    font-weight: 500;
}

.background-select {
    padding: var(--default-padding);
    border: 2px solid var(--border-color-light);
    border-radius: var(--default-border-radius);
    background: var(--bg-white);
    font-size: 1rem;
    width: 100%;
    max-width: 300px;
    cursor: pointer;
}

.background-preview {
    width: 100px;
    height: 100px;
    border-radius: 8px;
    overflow: hidden;
    margin-top: var(--default-padding);
    border: 2px solid var(--border-color-light);
    background: var(--bg-white);
}

.background-preview img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.3s ease;
}

.background-preview img:hover {
    transform: scale(1.1);
}

/* Campos de Input Genéricos e Específicos */
input[type="number"],
.person-input,
input[type="text"] {
    padding: var(--default-padding);
    border: 2px solid var(--border-color-light);
    border-radius: var(--default-border-radius);
    font-size: 1rem;
    background: var(--bg-input);
    position: relative; /* Garante que fique acima do ::before do .container */
    z-index: 1;
}

input[type="number"] {
    width: 100px;
}

.person-input {
    width: 150px;
}

input[type="text"] {
    flex: 1; /* Para o campo de descrição da tarefa ocupar espaço restante */
}


/* Botões */
button {
    padding: var(--default-padding) 1rem;
    border: none;
    border-radius: var(--default-border-radius);
    background: var(--color-accent);
    color: var(--bg-white);
    cursor: pointer;
    transition: background 0.3s ease;
    position: relative;
    z-index: 1;
}

button:hover {
    background: var(--color-accent-hover);
}

#stopBtn { /* ID é muito específico, geralmente bom para JS, mas ok para CSS se único */
    background: var(--color-success);
}

#stopBtn:hover {
    background: var(--color-success-hover);
}

/* Componente de Notificação de Atividade Atual */
.current-activity-notification {
    background: var(--bg-notification);
    border-left: 4px solid var(--color-info-border);
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: var(--default-border-radius);
    display: none; /* Controlado por JS */
    animation: slideIn 0.3s ease-out;
    position: relative;
    z-index: 1;
}

@keyframes slideIn {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.notification-content {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.notification-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

.notification-text {
    display: flex;
    flex-direction: column;
}

.notification-text span:first-child {
    font-weight: 600;
    color: var(--color-primary-text);
}

.notification-text span:last-child {
    color: var(--color-secondary-text);
}

/* Componente de Lista de Tarefas */
.tasks-container {
    margin-top: 2rem;
    position: relative;
    z-index: 1;
}

.task-input {
    display: flex;
    gap: var(--default-padding);
    margin-bottom: 1rem;
    align-items: center;
    flex-wrap: wrap;
}

.avatar-selector {
    position: relative;
    width: 40px;
    height: 40px;
}

#selectedAvatar { /* ID é muito específico */
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid var(--color-accent);
}

.avatar-options {
    position: absolute;
    top: 100%;
    left: 0;
    background: var(--bg-white);
    border-radius: var(--default-border-radius);
    padding: var(--default-padding);
    display: none; /* Controlado por JS/hover */
    box-shadow: var(--box-shadow-dropdown);
    z-index: 1000; /* Alto z-index para ficar sobre outros elementos */
}

.avatar-options img {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin: 0.25rem;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.avatar-options img:hover {
    transform: scale(1.1);
}

.avatar-selector:hover .avatar-options {
    display: flex;
    flex-wrap: wrap;
}

#taskList {
    list-style: none;
    /* padding: 0; Garantido pelo reset global */
}

.task-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    background: var(--bg-task-item);
    border-radius: var(--default-border-radius);
    margin-bottom: var(--default-padding);
    transition: all 0.3s ease;
}

.task-item.current {
    background: var(--bg-task-item-current);
    border-left: 4px solid var(--color-info-border);
}

.task-content {
    display: flex;
    align-items: center;
    gap: var(--default-padding);
}

.task-avatar {
    width: 30px;
    height: 30px;
    border-radius: 50%;
}

.task-person {
    font-weight: 600;
    color: var(--color-primary-text);
    margin-right: var(--default-padding);
}

.task-item button { /* Botão de excluir tarefa */
    background: var(--color-danger);
    padding: 0.25rem var(--default-padding);
    font-size: 0.875rem;
}

.task-item button:hover {
    background: var(--color-danger-hover);
}

.completed {
    text-decoration: line-through;
    color: var(--color-muted-text);
}

.task-time {
    font-size: 0.875rem;
    color: var(--color-muted-text);
    margin-left: var(--default-padding);
}

/* Componente de Upload (Genérico) */
.upload-container {
    width: 100%;
    max-width: 300px;
    margin: var(--default-padding) 0;
    text-align: center;
    transition: all 0.3s ease;
    position: relative; /* Garante que fique acima do ::before do .container */
    z-index: 1;
}

.upload-container.dragover {
    border-color: var(--color-accent); /* Assumindo que este container tem uma borda a ser mudada */
    background: var(--bg-light-gray);
    transform: scale(1.02);
}

.upload-container.dragover .upload-input {
    border-color: var(--color-accent);
    background: var(--bg-light-gray);
}

.upload-label {
    display: block;
    margin-bottom: var(--default-padding);
    color: var(--color-primary-text);
    font-weight: 500;
    cursor: pointer;
}

.upload-input {
    width: 100%;
    padding: 1rem;
    border: 2px dashed var(--border-color-light);
    border-radius: var(--default-border-radius);
    background: var(--bg-white);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.upload-input::before {
    content: 'Clique ou arraste uma imagem aqui';
    display: block;
    color: var(--color-muted-text);
    font-size: 0.875rem;
    margin-bottom: var(--default-padding);
}

.upload-input:hover {
    border-color: var(--color-accent);
    background: var(--bg-light-gray);
}

.upload-input:focus {
    outline: none;
    border-color: var(--color-accent);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2); /* Poderia usar var(--color-accent) com opacidade */
}


/* Componente de Upload para Imagem do Timer */
.timer-image-upload {
    margin: 1rem 0;
    padding: 1rem;
    background: var(--bg-container); /* Era rgba(255, 255, 255, 0.95) */
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    gap: var(--default-padding);
    transition: all 0.3s ease;
    position: relative; /* Garante que fique acima do ::before do .container */
    z-index: 1;
}

.upload-header-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.minimize-upload-button {
    background: none;
    border: none;
    font-size: 1.2rem;
    cursor: pointer;
    padding: var(--default-padding);
    border-radius: 50%;
    transition: transform 0.3s ease;
    color: var(--color-secondary-text);
}

.minimize-upload-button:hover {
    background-color: rgba(0, 0, 0, 0.1); /* Cor genérica, poderia ser uma variável */
}

.minimize-upload-button.minimized {
    transform: rotate(-90deg);
}

.upload-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--default-padding);
    transition: all 0.3s ease;
    max-height: 500px; /* Controlado por JS para minimizar */
    opacity: 1;
}

.upload-content.minimized {
    max-height: 0;
    opacity: 0;
    overflow: hidden;
}

.image-preview {
    width: 200px;
    height: 200px;
    border-radius: 8px;
    overflow: hidden;
    margin-top: var(--default-padding);
    border: 2px solid var(--border-color-light);
    background: var(--bg-white);
    display: none; /* Controlado por JS */
}

.image-preview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.image-preview img:hover {
    transform: scale(1.05);
}

/* ESTILOS REMOVIDOS (anteriormente relacionados à Matriz de Riscos) */
/* .control-buttons (se era específico da matriz de riscos)
    .maximize-button (se era específico da matriz de riscos)
    .info-bubble 
    .info-button
    .info-content
    @keyframes fadeIn 
    (E outras regras específicas da matriz de riscos como .risk-matrix, .risk-cell, etc.)
*/

/* Estilos gerais */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f0f2f5;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    background-color: white;
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

h1 {
    text-align: center;
    color: #2c3e50;
    margin-bottom: 30px;
}

/* Timer Display */
.timer-display-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    margin: 20px 0;
}

#timerDisplay {
    font-size: 48px;
    font-weight: bold;
    text-align: center;
    color: #2c3e50;
    background-color: #f8f9fa;
    padding: 20px 40px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    border: 2px solid #e9ecef;
    display: inline-block;
    min-width: 200px;
}

/* Timer Controls */
.timer-controls {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin: 20px 0;
    flex-wrap: wrap;
}

.timer-controls input,
.timer-controls button {
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    font-size: 16px;
}

.timer-controls input {
    width: 100px;
    text-align: center;
    border: 1px solid #ddd;
}

.timer-controls button {
    background-color: #3498db;
    color: white;
    cursor: pointer;
    transition: background-color 0.3s;
}

.timer-controls button:hover {
    background-color: #2980b9;
}

/* Total Time Display */
.total-time {
    font-size: 1.2em;
    color: #2c3e50;
    margin: 15px 0;
    text-align: center;
    font-weight: bold;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

/* Task List */
.tasks-container {
    margin-top: 30px;
}

.task-input {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    flex-wrap: wrap;
}

.task-input input {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    flex: 1;
    min-width: 200px;
}

.task-input button {
    padding: 10px 20px;
    background-color: #2ecc71;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.task-input button:hover {
    background-color: #27ae60;
}

#taskList {
    list-style: none;
    padding: 0;
}

.task-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    background-color: #f8f9fa;
    margin-bottom: 10px;
    border-radius: 5px;
    border: 1px solid #e9ecef;
}

.task-content {
    display: flex;
    align-items: center;
    gap: 10px;
}

.task-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

.task-person {
    font-weight: bold;
    color: #2c3e50;
}

.task-time {
    color: #7f8c8d;
    margin-left: 10px;
}

/* Avatar Selector */
.avatar-selector {
    position: relative;
    display: inline-block;
}

.avatar-options {
    display: none;
    position: absolute;
    background-color: white;
    border: 1px solid #ddd;
    border-radius: 5px;
    padding: 10px;
    z-index: 1;
}

.avatar-selector:hover .avatar-options {
    display: flex;
    gap: 10px;
}

.avatar-options img {
    width: 30px;
    height: 30px;
    cursor: pointer;
    border-radius: 50%;
}

/* Current Activity Notification */
.current-activity-notification {
    display: none;
    background-color: #f8f9fa;
    padding: 15px;
    border-radius: 5px;
    margin: 20px 0;
    border: 1px solid #e9ecef;
}

.notification-content {
    display: flex;
    align-items: center;
    gap: 15px;
}

.notification-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
}

.notification-text {
    display: flex;
    flex-direction: column;
}

/* Responsive Design */
@media (max-width: 600px) {
    .timer-controls {
        flex-direction: column;
        align-items: center;
    }
    
    .timer-controls input,
    .timer-controls button {
        width: 100%;
        max-width: 300px;
    }
    
    .task-input {
        flex-direction: column;
    }
    
    .task-input input,
    .task-input button {
        width: 100%;
    }
}